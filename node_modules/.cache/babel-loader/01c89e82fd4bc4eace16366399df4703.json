{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { shouldRender, parseDateString, toDateString, pad } from \"../../utils\";\n\nfunction rangeOptions(start, stop) {\n  var options = [];\n\n  for (var i = start; i <= stop; i++) {\n    options.push({\n      value: i,\n      label: pad(i, 2)\n    });\n  }\n\n  return options;\n}\n\nfunction readyForChange(state) {\n  return Object.keys(state).every(function (key) {\n    return state[key] !== -1;\n  });\n}\n\nfunction DateElement(props) {\n  var type = props.type,\n      range = props.range,\n      value = props.value,\n      select = props.select,\n      rootId = props.rootId,\n      disabled = props.disabled,\n      readonly = props.readonly,\n      autofocus = props.autofocus,\n      registry = props.registry,\n      onBlur = props.onBlur;\n  var id = rootId + \"_\" + type;\n  var SelectWidget = registry.widgets.SelectWidget;\n  return React.createElement(SelectWidget, {\n    schema: {\n      type: \"integer\"\n    },\n    id: id,\n    className: \"form-control\",\n    options: {\n      enumOptions: rangeOptions(range[0], range[1])\n    },\n    placeholder: type,\n    value: value,\n    disabled: disabled,\n    readonly: readonly,\n    autofocus: autofocus,\n    onChange: function onChange(value) {\n      return select(type, value);\n    },\n    onBlur: onBlur\n  });\n}\n\nvar AltDateWidget = /*#__PURE__*/function (_Component) {\n  _inherits(AltDateWidget, _Component);\n\n  function AltDateWidget(props) {\n    var _this;\n\n    _classCallCheck(this, AltDateWidget);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AltDateWidget).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (property, value) {\n      _this.setState(_defineProperty({}, property, typeof value === \"undefined\" ? -1 : value), function () {\n        // Only propagate to parent state if we have a complete date{time}\n        if (readyForChange(_this.state)) {\n          _this.props.onChange(toDateString(_this.state, _this.props.time));\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setNow\", function (event) {\n      event.preventDefault();\n      var _this$props = _this.props,\n          time = _this$props.time,\n          disabled = _this$props.disabled,\n          readonly = _this$props.readonly,\n          onChange = _this$props.onChange;\n\n      if (disabled || readonly) {\n        return;\n      }\n\n      var nowDateObj = parseDateString(new Date().toJSON(), time);\n\n      _this.setState(nowDateObj, function () {\n        return onChange(toDateString(_this.state, time));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clear\", function (event) {\n      event.preventDefault();\n      var _this$props2 = _this.props,\n          time = _this$props2.time,\n          disabled = _this$props2.disabled,\n          readonly = _this$props2.readonly,\n          onChange = _this$props2.onChange;\n\n      if (disabled || readonly) {\n        return;\n      }\n\n      _this.setState(parseDateString(\"\", time), function () {\n        return onChange(undefined);\n      });\n    });\n\n    _this.state = parseDateString(props.value, props.time);\n    return _this;\n  }\n\n  _createClass(AltDateWidget, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.value && prevProps.value !== parseDateString(this.props.value, this.props.time)) {\n        this.setState(parseDateString(this.props.value, this.props.time));\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return shouldRender(this, nextProps, nextState);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          id = _this$props3.id,\n          disabled = _this$props3.disabled,\n          readonly = _this$props3.readonly,\n          autofocus = _this$props3.autofocus,\n          registry = _this$props3.registry,\n          onBlur = _this$props3.onBlur,\n          options = _this$props3.options;\n      return React.createElement(\"ul\", {\n        className: \"list-inline\"\n      }, this.dateElementProps.map(function (elemProps, i) {\n        return React.createElement(\"li\", {\n          key: i\n        }, React.createElement(DateElement, _extends({\n          rootId: id,\n          select: _this2.onChange\n        }, elemProps, {\n          disabled: disabled,\n          readonly: readonly,\n          registry: registry,\n          onBlur: onBlur,\n          autofocus: autofocus && i === 0\n        })));\n      }), (options.hideNowButton !== \"undefined\" ? !options.hideNowButton : true) && React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"btn btn-info btn-now\",\n        onClick: this.setNow\n      }, \"Now\")), (options.hideClearButton !== \"undefined\" ? !options.hideClearButton : true) && React.createElement(\"li\", null, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"btn btn-warning btn-clear\",\n        onClick: this.clear\n      }, \"Clear\")));\n    }\n  }, {\n    key: \"dateElementProps\",\n    get: function get() {\n      var _this$props4 = this.props,\n          time = _this$props4.time,\n          options = _this$props4.options;\n      var _this$state = this.state,\n          year = _this$state.year,\n          month = _this$state.month,\n          day = _this$state.day,\n          hour = _this$state.hour,\n          minute = _this$state.minute,\n          second = _this$state.second;\n      var data = [{\n        type: \"year\",\n        range: options.yearsRange,\n        value: year\n      }, {\n        type: \"month\",\n        range: [1, 12],\n        value: month\n      }, {\n        type: \"day\",\n        range: [1, 31],\n        value: day\n      }];\n\n      if (time) {\n        data.push({\n          type: \"hour\",\n          range: [0, 23],\n          value: hour\n        }, {\n          type: \"minute\",\n          range: [0, 59],\n          value: minute\n        }, {\n          type: \"second\",\n          range: [0, 59],\n          value: second\n        });\n      }\n\n      return data;\n    }\n  }]);\n\n  return AltDateWidget;\n}(Component);\n\n_defineProperty(AltDateWidget, \"defaultProps\", {\n  time: false,\n  disabled: false,\n  readonly: false,\n  autofocus: false,\n  options: {\n    yearsRange: [1900, new Date().getFullYear() + 2]\n  }\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  AltDateWidget.propTypes = {\n    schema: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    value: PropTypes.string,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    time: PropTypes.bool,\n    options: PropTypes.object\n  };\n}\n\nexport default AltDateWidget;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,YAAxC,EAAsDC,GAAtD,QAAiE,aAAjE;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,IAA7B,EAAmC;AACjC,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAGH,KAAb,EAAoBG,CAAC,IAAIF,IAAzB,EAA+BE,CAAC,EAAhC,EAAoC;AAClCD,WAAO,CAACE,IAARF,CAAa;AAAEG,WAAK,EAAEF,CAAT;AAAYG,WAAK,EAAER,GAAG,CAACK,CAAD,EAAI,CAAJ;AAAtB,KAAbD;AACD;;AACD,SAAOA,OAAP;AACD;;AAED,SAASK,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,SAAOC,MAAM,CAACC,IAAPD,CAAYD,KAAZC,EAAmBE,KAAnBF,CAAyB,eAAG;AAAA,WAAID,KAAK,CAACI,GAAD,CAALJ,KAAe,CAAC,CAApB;AAA5B,IAAP;AACD;;AAED,SAASK,WAAT,CAAqBC,KAArB,EAA4B;AAAA,MAExBC,IAFwB,GAYtBD,KAZsB,CAExBC,IAFwB;AAAA,MAGxBC,KAHwB,GAYtBF,KAZsB,CAGxBE,KAHwB;AAAA,MAIxBX,KAJwB,GAYtBS,KAZsB,CAIxBT,KAJwB;AAAA,MAKxBY,MALwB,GAYtBH,KAZsB,CAKxBG,MALwB;AAAA,MAMxBC,MANwB,GAYtBJ,KAZsB,CAMxBI,MANwB;AAAA,MAOxBC,QAPwB,GAYtBL,KAZsB,CAOxBK,QAPwB;AAAA,MAQxBC,QARwB,GAYtBN,KAZsB,CAQxBM,QARwB;AAAA,MASxBC,SATwB,GAYtBP,KAZsB,CASxBO,SATwB;AAAA,MAUxBC,QAVwB,GAYtBR,KAZsB,CAUxBQ,QAVwB;AAAA,MAWxBC,MAXwB,GAYtBT,KAZsB,CAWxBS,MAXwB;AAa1B,MAAMC,EAAE,GAAGN,MAAM,GAAG,GAATA,GAAeH,IAA1B;AAb0B,MAclBU,YAdkB,GAcDH,QAAQ,CAACI,OAATJ,CAAjBG,YAdkB;AAe1B,SACEjC,oBAACiC,YAAD;AACEE,UAAM,EAAE;AAAEZ,UAAI,EAAE;AAAR,KADV;AAEES,MAAE,EAAEA,EAFN;AAGEI,aAAS,EAAC,cAHZ;AAIE1B,WAAO,EAAE;AAAE2B,iBAAW,EAAE9B,YAAY,CAACiB,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB;AAA3B,KAJX;AAKEc,eAAW,EAAEf,IALf;AAMEV,SAAK,EAAEA,KANT;AAOEc,YAAQ,EAAEA,QAPZ;AAQEC,YAAQ,EAAEA,QARZ;AASEC,aAAS,EAAEA,SATb;AAUEU,YAAQ,EAAE,yBAAK;AAAA,aAAId,MAAM,CAACF,IAAD,EAAOV,KAAP,CAAV;AAVjB;AAWEkB,UAAM,EAAEA;AAXV,IADF;AAeD;;IAEKS,a;;;AAWJ,yBAAYlB,KAAZ,EAAmB;AAAA;;AAAAmB;;AACjBC,uFAAMpB,KAAN;;AADiBqB,+DAkBR,UAACC,QAAD,EAAW/B,KAAX,EAAqB;AAC9B6B,YAAKG,QAAL,qBACKD,QADL,EACgB,OAAO/B,KAAP,KAAiB,WAAjB,GAA+B,CAAC,CAAhC,GAAoCA,KADpD,GAEE,YAAM;AACJ;AACA,YAAIE,cAAc,CAAC2B,MAAK1B,KAAN,CAAlB,EAAgC;AAC9B0B,gBAAKpB,KAAL,CAAWiB,QAAX,CAAoBlC,YAAY,CAACqC,MAAK1B,KAAN,EAAa0B,MAAKpB,KAAL,CAAWwB,IAAxB,CAAhC;AACD;AANL;AAnBiB;;AAAAH,6DA8BV,iBAAS;AAChBI,WAAK,CAACC,cAAND;AADgB,wBAE+BL,MAAKpB,KAFpC;AAAA,UAERwB,IAFQ,eAERA,IAFQ;AAAA,UAEFnB,QAFE,eAEFA,QAFE;AAAA,UAEQC,QAFR,eAEQA,QAFR;AAAA,UAEkBW,QAFlB,eAEkBA,QAFlB;;AAGhB,UAAIZ,QAAQ,IAAIC,QAAhB,EAA0B;AACxB;AACD;;AACD,UAAMqB,UAAU,GAAG7C,eAAe,CAAC,IAAI8C,IAAJ,GAAWC,MAAX,EAAD,EAAsBL,IAAtB,CAAlC;;AACAJ,YAAKG,QAAL,CAAcI,UAAd,EAA0B;AAAA,eAAMV,QAAQ,CAAClC,YAAY,CAACqC,MAAK1B,KAAN,EAAa8B,IAAb,CAAb,CAAd;AAA1B;AArCiB;;AAAAH,4DAwCX,iBAAS;AACfI,WAAK,CAACC,cAAND;AADe,yBAEgCL,MAAKpB,KAFrC;AAAA,UAEPwB,IAFO,gBAEPA,IAFO;AAAA,UAEDnB,QAFC,gBAEDA,QAFC;AAAA,UAESC,QAFT,gBAESA,QAFT;AAAA,UAEmBW,QAFnB,gBAEmBA,QAFnB;;AAGf,UAAIZ,QAAQ,IAAIC,QAAhB,EAA0B;AACxB;AACD;;AACDc,YAAKG,QAAL,CAAczC,eAAe,CAAC,EAAD,EAAK0C,IAAL,CAA7B,EAAyC;AAAA,eAAMP,QAAQ,CAACa,SAAD,CAAd;AAAzC;AA9CiB;;AAEjBV,UAAK1B,KAAL,GAAaZ,eAAe,CAACkB,KAAK,CAACT,KAAP,EAAcS,KAAK,CAACwB,IAApB,CAA5B;AAFiB;AAGlB;;;;uCAEkBO,WAAWC,WAAW;AACvC,UACED,SAAS,CAACxC,KAAVwC,IACAA,SAAS,CAACxC,KAAVwC,KAAoBjD,eAAe,CAAC,KAAKkB,KAAL,CAAWT,KAAZ,EAAmB,KAAKS,KAAL,CAAWwB,IAA9B,CAFrC,EAGE;AACA,aAAKD,QAAL,CAAczC,eAAe,CAAC,KAAKkB,KAAL,CAAWT,KAAZ,EAAmB,KAAKS,KAAL,CAAWwB,IAA9B,CAA7B;AACD;AACF;;;0CAEqBS,WAAWC,WAAW;AAC1C,aAAOrD,YAAY,CAAC,IAAD,EAAOoD,SAAP,EAAkBC,SAAlB,CAAnB;AACD;;;6BAuDQ;AAAA;;AAAA,yBASH,KAAKlC,KATF;AAAA,UAELU,EAFK,gBAELA,EAFK;AAAA,UAGLL,QAHK,gBAGLA,QAHK;AAAA,UAILC,QAJK,gBAILA,QAJK;AAAA,UAKLC,SALK,gBAKLA,SALK;AAAA,UAMLC,QANK,gBAMLA,QANK;AAAA,UAOLC,MAPK,gBAOLA,MAPK;AAAA,UAQLrB,OARK,gBAQLA,OARK;AAUP,aACEV;AAAIoC,iBAAS,EAAC;AAAd,SACG,KAAKqB,gBAAL,CAAsBC,GAAtB,CAA0B,UAACC,SAAD,EAAYhD,CAAZ;AAAA,eACzBX;AAAIoB,aAAG,EAAET;AAAT,WACEX,oBAACqB,WAAD;AACEK,gBAAM,EAAEM,EADV;AAEEP,gBAAM,EAAEmC,MAAI,CAACrB;AAFf,WAGMoB,SAHN;AAIEhC,kBAAQ,EAAEA,QAJZ;AAKEC,kBAAQ,EAAEA,QALZ;AAMEE,kBAAQ,EAAEA,QANZ;AAOEC,gBAAM,EAAEA,MAPV;AAQEF,mBAAS,EAAEA,SAAS,IAAIlB,CAAC,KAAK;AARhC,WADF,CADyB;AAA1B,QADH,EAeG,CAACD,OAAO,CAACmD,aAARnD,KAA0B,WAA1BA,GACE,CAACA,OAAO,CAACmD,aADXnD,GAEE,IAFH,KAGCV,gCACEA;AAAG8D,YAAI,EAAC,GAAR;AAAY1B,iBAAS,EAAC,sBAAtB;AAA6C2B,eAAO,EAAE,KAAKC;AAA3D,eADF,CAlBJ,EAwBG,CAACtD,OAAO,CAACuD,eAARvD,KAA4B,WAA5BA,GACE,CAACA,OAAO,CAACuD,eADXvD,GAEE,IAFH,KAGCV,gCACEA;AACE8D,YAAI,EAAC,GADP;AAEE1B,iBAAS,EAAC,2BAFZ;AAGE2B,eAAO,EAAE,KAAKG;AAHhB,iBADF,CA3BJ,CADF;AAuCD;;;wBAvEsB;AAAA,yBACK,KAAK5C,KADV;AAAA,UACbwB,IADa,gBACbA,IADa;AAAA,UACPpC,OADO,gBACPA,OADO;AAAA,wBAE8B,KAAKM,KAFnC;AAAA,UAEbmD,IAFa,eAEbA,IAFa;AAAA,UAEPC,KAFO,eAEPA,KAFO;AAAA,UAEAC,GAFA,eAEAA,GAFA;AAAA,UAEKC,IAFL,eAEKA,IAFL;AAAA,UAEWC,MAFX,eAEWA,MAFX;AAAA,UAEmBC,MAFnB,eAEmBA,MAFnB;AAGrB,UAAMC,IAAI,GAAG,CACX;AACElD,YAAI,EAAE,MADR;AAEEC,aAAK,EAAEd,OAAO,CAACgE,UAFjB;AAGE7D,aAAK,EAAEsD;AAHT,OADW,EAMX;AAAE5C,YAAI,EAAE,OAAR;AAAiBC,aAAK,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAxB;AAAiCX,aAAK,EAAEuD;AAAxC,OANW,EAOX;AAAE7C,YAAI,EAAE,KAAR;AAAeC,aAAK,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAtB;AAA+BX,aAAK,EAAEwD;AAAtC,OAPW,CAAb;;AASA,UAAIvB,IAAJ,EAAU;AACR2B,YAAI,CAAC7D,IAAL6D,CACE;AAAElD,cAAI,EAAE,MAAR;AAAgBC,eAAK,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAvB;AAAgCX,eAAK,EAAEyD;AAAvC,SADFG,EAEE;AAAElD,cAAI,EAAE,QAAR;AAAkBC,eAAK,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAzB;AAAkCX,eAAK,EAAE0D;AAAzC,SAFFE,EAGE;AAAElD,cAAI,EAAE,QAAR;AAAkBC,eAAK,EAAE,CAAC,CAAD,EAAI,EAAJ,CAAzB;AAAkCX,eAAK,EAAE2D;AAAzC,SAHFC;AAKD;;AACD,aAAOA,IAAP;AACD;;;;EAhFyBxE;;gBAAtBuC,e,gBACkB;AACpBM,MAAI,EAAE,KADc;AAEpBnB,UAAQ,EAAE,KAFU;AAGpBC,UAAQ,EAAE,KAHU;AAIpBC,WAAS,EAAE,KAJS;AAKpBnB,SAAO,EAAE;AACPgE,cAAU,EAAE,CAAC,IAAD,EAAO,IAAIxB,IAAJ,GAAWyB,WAAX,KAA2B,CAAlC;AADL;AALW;;AAqIxB,IAAIC,OAAO,CAACC,GAARD,CAAYE,QAAZF,KAAyB,YAA7B,EAA2C;AACzCpC,eAAa,CAACuC,SAAdvC,GAA0B;AACxBL,UAAM,EAAEjC,SAAS,CAAC8E,MAAV9E,CAAiB+E,UADD;AAExBjD,MAAE,EAAE9B,SAAS,CAACgF,MAAVhF,CAAiB+E,UAFG;AAGxBpE,SAAK,EAAEX,SAAS,CAACgF,MAHO;AAIxBC,YAAQ,EAAEjF,SAAS,CAACkF,IAJI;AAKxBzD,YAAQ,EAAEzB,SAAS,CAACkF,IALI;AAMxBxD,YAAQ,EAAE1B,SAAS,CAACkF,IANI;AAOxBvD,aAAS,EAAE3B,SAAS,CAACkF,IAPG;AAQxB7C,YAAQ,EAAErC,SAAS,CAACmF,IARI;AASxBtD,UAAM,EAAE7B,SAAS,CAACmF,IATM;AAUxBvC,QAAI,EAAE5C,SAAS,CAACkF,IAVQ;AAWxB1E,WAAO,EAAER,SAAS,CAAC8E;AAXK,GAA1BxC;AAaD;;AAED,eAAeA,aAAf","names":["React","Component","PropTypes","shouldRender","parseDateString","toDateString","pad","rangeOptions","start","stop","options","i","push","value","label","readyForChange","state","Object","keys","every","key","DateElement","props","type","range","select","rootId","disabled","readonly","autofocus","registry","onBlur","id","SelectWidget","widgets","schema","className","enumOptions","placeholder","onChange","AltDateWidget","_classCallCheck","_this","_defineProperty","property","setState","time","event","preventDefault","nowDateObj","Date","toJSON","undefined","prevProps","prevState","nextProps","nextState","dateElementProps","map","elemProps","_this2","hideNowButton","href","onClick","setNow","hideClearButton","clear","year","month","day","hour","minute","second","data","yearsRange","getFullYear","process","env","NODE_ENV","propTypes","object","isRequired","string","required","bool","func"],"sources":["/core/src/components/widgets/AltDateWidget.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { shouldRender, parseDateString, toDateString, pad } from \"../../utils\";\n\nfunction rangeOptions(start, stop) {\n  let options = [];\n  for (let i = start; i <= stop; i++) {\n    options.push({ value: i, label: pad(i, 2) });\n  }\n  return options;\n}\n\nfunction readyForChange(state) {\n  return Object.keys(state).every(key => state[key] !== -1);\n}\n\nfunction DateElement(props) {\n  const {\n    type,\n    range,\n    value,\n    select,\n    rootId,\n    disabled,\n    readonly,\n    autofocus,\n    registry,\n    onBlur,\n  } = props;\n  const id = rootId + \"_\" + type;\n  const { SelectWidget } = registry.widgets;\n  return (\n    <SelectWidget\n      schema={{ type: \"integer\" }}\n      id={id}\n      className=\"form-control\"\n      options={{ enumOptions: rangeOptions(range[0], range[1]) }}\n      placeholder={type}\n      value={value}\n      disabled={disabled}\n      readonly={readonly}\n      autofocus={autofocus}\n      onChange={value => select(type, value)}\n      onBlur={onBlur}\n    />\n  );\n}\n\nclass AltDateWidget extends Component {\n  static defaultProps = {\n    time: false,\n    disabled: false,\n    readonly: false,\n    autofocus: false,\n    options: {\n      yearsRange: [1900, new Date().getFullYear() + 2],\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = parseDateString(props.value, props.time);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.value &&\n      prevProps.value !== parseDateString(this.props.value, this.props.time)\n    ) {\n      this.setState(parseDateString(this.props.value, this.props.time));\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return shouldRender(this, nextProps, nextState);\n  }\n\n  onChange = (property, value) => {\n    this.setState(\n      { [property]: typeof value === \"undefined\" ? -1 : value },\n      () => {\n        // Only propagate to parent state if we have a complete date{time}\n        if (readyForChange(this.state)) {\n          this.props.onChange(toDateString(this.state, this.props.time));\n        }\n      }\n    );\n  };\n\n  setNow = event => {\n    event.preventDefault();\n    const { time, disabled, readonly, onChange } = this.props;\n    if (disabled || readonly) {\n      return;\n    }\n    const nowDateObj = parseDateString(new Date().toJSON(), time);\n    this.setState(nowDateObj, () => onChange(toDateString(this.state, time)));\n  };\n\n  clear = event => {\n    event.preventDefault();\n    const { time, disabled, readonly, onChange } = this.props;\n    if (disabled || readonly) {\n      return;\n    }\n    this.setState(parseDateString(\"\", time), () => onChange(undefined));\n  };\n\n  get dateElementProps() {\n    const { time, options } = this.props;\n    const { year, month, day, hour, minute, second } = this.state;\n    const data = [\n      {\n        type: \"year\",\n        range: options.yearsRange,\n        value: year,\n      },\n      { type: \"month\", range: [1, 12], value: month },\n      { type: \"day\", range: [1, 31], value: day },\n    ];\n    if (time) {\n      data.push(\n        { type: \"hour\", range: [0, 23], value: hour },\n        { type: \"minute\", range: [0, 59], value: minute },\n        { type: \"second\", range: [0, 59], value: second }\n      );\n    }\n    return data;\n  }\n\n  render() {\n    const {\n      id,\n      disabled,\n      readonly,\n      autofocus,\n      registry,\n      onBlur,\n      options,\n    } = this.props;\n    return (\n      <ul className=\"list-inline\">\n        {this.dateElementProps.map((elemProps, i) => (\n          <li key={i}>\n            <DateElement\n              rootId={id}\n              select={this.onChange}\n              {...elemProps}\n              disabled={disabled}\n              readonly={readonly}\n              registry={registry}\n              onBlur={onBlur}\n              autofocus={autofocus && i === 0}\n            />\n          </li>\n        ))}\n        {(options.hideNowButton !== \"undefined\"\n          ? !options.hideNowButton\n          : true) && (\n          <li>\n            <a href=\"#\" className=\"btn btn-info btn-now\" onClick={this.setNow}>\n              Now\n            </a>\n          </li>\n        )}\n        {(options.hideClearButton !== \"undefined\"\n          ? !options.hideClearButton\n          : true) && (\n          <li>\n            <a\n              href=\"#\"\n              className=\"btn btn-warning btn-clear\"\n              onClick={this.clear}>\n              Clear\n            </a>\n          </li>\n        )}\n      </ul>\n    );\n  }\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  AltDateWidget.propTypes = {\n    schema: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    value: PropTypes.string,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    time: PropTypes.bool,\n    options: PropTypes.object,\n  };\n}\n\nexport default AltDateWidget;\n"]},"metadata":{},"sourceType":"module"}