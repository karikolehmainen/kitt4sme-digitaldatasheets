{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport AddButton from \"../AddButton\";\nimport React, { Component } from \"react\";\nimport * as types from \"../../types\";\nimport { orderProperties, retrieveSchema, getDefaultRegistry, canExpand, ADDITIONAL_PROPERTY_FLAG } from \"../../utils\";\n\nfunction DefaultObjectFieldTemplate(props) {\n  var TitleField = props.TitleField,\n      DescriptionField = props.DescriptionField;\n  return React.createElement(\"fieldset\", {\n    id: props.idSchema.$id\n  }, (props.uiSchema[\"ui:title\"] || props.title) && React.createElement(TitleField, {\n    id: \"\".concat(props.idSchema.$id, \"__title\"),\n    title: props.title || props.uiSchema[\"ui:title\"],\n    required: props.required,\n    formContext: props.formContext\n  }), props.description && React.createElement(DescriptionField, {\n    id: \"\".concat(props.idSchema.$id, \"__description\"),\n    description: props.description,\n    formContext: props.formContext\n  }), props.properties.map(function (prop) {\n    return prop.content;\n  }), canExpand(props.schema, props.uiSchema, props.formData) && React.createElement(AddButton, {\n    className: \"object-property-expand\",\n    onClick: props.onAddClick(props.schema),\n    disabled: props.disabled || props.readonly\n  }));\n}\n\nvar ObjectField = /*#__PURE__*/function (_Component) {\n  _inherits(ObjectField, _Component);\n\n  function ObjectField() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ObjectField);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ObjectField)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      wasPropertyKeyModified: false,\n      additionalProperties: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPropertyChange\", function (name) {\n      var addedByAdditionalProperties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return function (value, errorSchema) {\n        if (value === undefined && addedByAdditionalProperties) {\n          // Don't set value = undefined for fields added by\n          // additionalProperties. Doing so removes them from the\n          // formData, which causes them to completely disappear\n          // (including the input field for the property name). Unlike\n          // fields which are \"mandated\" by the schema, these fields can\n          // be set to undefined by clicking a \"delete field\" button, so\n          // set empty values to the empty string.\n          value = \"\";\n        }\n\n        var newFormData = _objectSpread({}, _this.props.formData, _defineProperty({}, name, value));\n\n        _this.props.onChange(newFormData, errorSchema && _this.props.errorSchema && _objectSpread({}, _this.props.errorSchema, _defineProperty({}, name, errorSchema)));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDropPropertyClick\", function (key) {\n      return function (event) {\n        event.preventDefault();\n        var _this$props = _this.props,\n            onChange = _this$props.onChange,\n            formData = _this$props.formData;\n\n        var copiedFormData = _objectSpread({}, formData);\n\n        delete copiedFormData[key];\n        onChange(copiedFormData);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAvailableKey\", function (preferredKey, formData) {\n      var index = 0;\n      var newKey = preferredKey;\n\n      while (formData.hasOwnProperty(newKey)) {\n        newKey = \"\".concat(preferredKey, \"-\").concat(++index);\n      }\n\n      return newKey;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyChange\", function (oldValue) {\n      return function (value, errorSchema) {\n        if (oldValue === value) {\n          return;\n        }\n\n        value = _this.getAvailableKey(value, _this.props.formData);\n\n        var newFormData = _objectSpread({}, _this.props.formData);\n\n        var newKeys = _defineProperty({}, oldValue, value);\n\n        var keyValues = Object.keys(newFormData).map(function (key) {\n          var newKey = newKeys[key] || key;\n          return _defineProperty({}, newKey, newFormData[key]);\n        });\n        var renamedObj = Object.assign.apply(Object, [{}].concat(_toConsumableArray(keyValues)));\n\n        _this.setState({\n          wasPropertyKeyModified: true\n        });\n\n        _this.props.onChange(renamedObj, errorSchema && _this.props.errorSchema && _objectSpread({}, _this.props.errorSchema, _defineProperty({}, value, errorSchema)));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddClick\", function (schema) {\n      return function () {\n        var type = schema.additionalProperties.type;\n\n        var newFormData = _objectSpread({}, _this.props.formData);\n\n        if (schema.additionalProperties.hasOwnProperty(\"$ref\")) {\n          var _this$props$registry = _this.props.registry,\n              registry = _this$props$registry === void 0 ? getDefaultRegistry() : _this$props$registry;\n          var refSchema = retrieveSchema({\n            $ref: schema.additionalProperties[\"$ref\"]\n          }, registry.rootSchema, _this.props.formData);\n          type = refSchema.type;\n        }\n\n        newFormData[_this.getAvailableKey(\"newKey\", newFormData)] = _this.getDefaultValue(type);\n\n        _this.props.onChange(newFormData);\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(ObjectField, [{\n    key: \"isRequired\",\n    value: function isRequired(name) {\n      var schema = this.props.schema;\n      return Array.isArray(schema.required) && schema.required.indexOf(name) !== -1;\n    }\n  }, {\n    key: \"getDefaultValue\",\n    value: function getDefaultValue(type) {\n      switch (type) {\n        case \"string\":\n          return \"New Value\";\n\n        case \"array\":\n          return [];\n\n        case \"boolean\":\n          return false;\n\n        case \"null\":\n          return null;\n\n        case \"number\":\n          return 0;\n\n        case \"object\":\n          return {};\n\n        default:\n          // We don't have a datatype for some reason (perhaps additionalProperties was true)\n          return \"New Value\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          uiSchema = _this$props2.uiSchema,\n          formData = _this$props2.formData,\n          errorSchema = _this$props2.errorSchema,\n          idSchema = _this$props2.idSchema,\n          name = _this$props2.name,\n          required = _this$props2.required,\n          disabled = _this$props2.disabled,\n          readonly = _this$props2.readonly,\n          idPrefix = _this$props2.idPrefix,\n          onBlur = _this$props2.onBlur,\n          onFocus = _this$props2.onFocus,\n          _this$props2$registry = _this$props2.registry,\n          registry = _this$props2$registry === void 0 ? getDefaultRegistry() : _this$props2$registry;\n      var rootSchema = registry.rootSchema,\n          fields = registry.fields,\n          formContext = registry.formContext;\n      var SchemaField = fields.SchemaField,\n          TitleField = fields.TitleField,\n          DescriptionField = fields.DescriptionField;\n      var schema = retrieveSchema(this.props.schema, rootSchema, formData);\n      var title = schema.title === undefined ? name : schema.title;\n      var description = uiSchema[\"ui:description\"] || schema.description;\n      var orderedProperties;\n\n      try {\n        var properties = Object.keys(schema.properties || {});\n        orderedProperties = orderProperties(properties, uiSchema[\"ui:order\"]);\n      } catch (err) {\n        return React.createElement(\"div\", null, React.createElement(\"p\", {\n          className: \"config-error\",\n          style: {\n            color: \"red\"\n          }\n        }, \"Invalid \", name || \"root\", \" object field configuration:\", React.createElement(\"em\", null, err.message), \".\"), React.createElement(\"pre\", null, JSON.stringify(schema)));\n      }\n\n      var Template = uiSchema[\"ui:ObjectFieldTemplate\"] || registry.ObjectFieldTemplate || DefaultObjectFieldTemplate;\n      var templateProps = {\n        title: uiSchema[\"ui:title\"] || title,\n        description: description,\n        TitleField: TitleField,\n        DescriptionField: DescriptionField,\n        properties: orderedProperties.map(function (name) {\n          var addedByAdditionalProperties = schema.properties[name].hasOwnProperty(ADDITIONAL_PROPERTY_FLAG);\n          var fieldUiSchema = addedByAdditionalProperties ? uiSchema.additionalProperties : uiSchema[name];\n          var hidden = fieldUiSchema && fieldUiSchema[\"ui:widget\"] === \"hidden\";\n          return {\n            content: React.createElement(SchemaField, {\n              key: name,\n              name: name,\n              required: _this2.isRequired(name),\n              schema: schema.properties[name],\n              uiSchema: fieldUiSchema,\n              errorSchema: errorSchema[name],\n              idSchema: idSchema[name],\n              idPrefix: idPrefix,\n              formData: (formData || {})[name],\n              wasPropertyKeyModified: _this2.state.wasPropertyKeyModified,\n              onKeyChange: _this2.onKeyChange(name),\n              onChange: _this2.onPropertyChange(name, addedByAdditionalProperties),\n              onBlur: onBlur,\n              onFocus: onFocus,\n              registry: registry,\n              disabled: disabled,\n              readonly: readonly,\n              onDropPropertyClick: _this2.onDropPropertyClick\n            }),\n            name: name,\n            readonly: readonly,\n            disabled: disabled,\n            required: required,\n            hidden: hidden\n          };\n        }),\n        readonly: readonly,\n        disabled: disabled,\n        required: required,\n        idSchema: idSchema,\n        uiSchema: uiSchema,\n        schema: schema,\n        formData: formData,\n        formContext: formContext,\n        registry: registry\n      };\n      return React.createElement(Template, _extends({}, templateProps, {\n        onAddClick: this.handleAddClick\n      }));\n    }\n  }]);\n\n  return ObjectField;\n}(Component);\n\n_defineProperty(ObjectField, \"defaultProps\", {\n  uiSchema: {},\n  formData: {},\n  errorSchema: {},\n  idSchema: {},\n  required: false,\n  disabled: false,\n  readonly: false\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  ObjectField.propTypes = types.fieldProps;\n}\n\nexport default ObjectField;","map":{"version":3,"mappings":"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","names":["AddButton","React","Component","types","orderProperties","retrieveSchema","getDefaultRegistry","canExpand","ADDITIONAL_PROPERTY_FLAG","DefaultObjectFieldTemplate","props","TitleField","DescriptionField","id","idSchema","$id","uiSchema","title","required","formContext","description","properties","map","prop","content","schema","formData","className","onClick","onAddClick","disabled","readonly","ObjectField","wasPropertyKeyModified","additionalProperties","name","addedByAdditionalProperties","value","errorSchema","undefined","newFormData","_this","onChange","event","preventDefault","copiedFormData","key","preferredKey","index","newKey","hasOwnProperty","oldValue","getAvailableKey","newKeys","keyValues","Object","keys","renamedObj","assign","setState","type","registry","refSchema","$ref","rootSchema","getDefaultValue","Array","isArray","indexOf","idPrefix","onBlur","onFocus","fields","SchemaField","orderedProperties","err","style","color","message","JSON","stringify","Template","ObjectFieldTemplate","templateProps","fieldUiSchema","hidden","_this2","isRequired","state","onKeyChange","onPropertyChange","onDropPropertyClick","handleAddClick","process","env","NODE_ENV","propTypes","fieldProps"],"sources":["/core/src/components/fields/ObjectField.js"],"sourcesContent":["import AddButton from \"../AddButton\";\nimport React, { Component } from \"react\";\nimport * as types from \"../../types\";\n\nimport {\n  orderProperties,\n  retrieveSchema,\n  getDefaultRegistry,\n  canExpand,\n  ADDITIONAL_PROPERTY_FLAG,\n} from \"../../utils\";\n\nfunction DefaultObjectFieldTemplate(props) {\n  const { TitleField, DescriptionField } = props;\n  return (\n    <fieldset id={props.idSchema.$id}>\n      {(props.uiSchema[\"ui:title\"] || props.title) && (\n        <TitleField\n          id={`${props.idSchema.$id}__title`}\n          title={props.title || props.uiSchema[\"ui:title\"]}\n          required={props.required}\n          formContext={props.formContext}\n        />\n      )}\n      {props.description && (\n        <DescriptionField\n          id={`${props.idSchema.$id}__description`}\n          description={props.description}\n          formContext={props.formContext}\n        />\n      )}\n      {props.properties.map(prop => prop.content)}\n      {canExpand(props.schema, props.uiSchema, props.formData) && (\n        <AddButton\n          className=\"object-property-expand\"\n          onClick={props.onAddClick(props.schema)}\n          disabled={props.disabled || props.readonly}\n        />\n      )}\n    </fieldset>\n  );\n}\n\nclass ObjectField extends Component {\n  static defaultProps = {\n    uiSchema: {},\n    formData: {},\n    errorSchema: {},\n    idSchema: {},\n    required: false,\n    disabled: false,\n    readonly: false,\n  };\n\n  state = {\n    wasPropertyKeyModified: false,\n    additionalProperties: {},\n  };\n\n  isRequired(name) {\n    const schema = this.props.schema;\n    return (\n      Array.isArray(schema.required) && schema.required.indexOf(name) !== -1\n    );\n  }\n\n  onPropertyChange = (name, addedByAdditionalProperties = false) => {\n    return (value, errorSchema) => {\n      if (value === undefined && addedByAdditionalProperties) {\n        // Don't set value = undefined for fields added by\n        // additionalProperties. Doing so removes them from the\n        // formData, which causes them to completely disappear\n        // (including the input field for the property name). Unlike\n        // fields which are \"mandated\" by the schema, these fields can\n        // be set to undefined by clicking a \"delete field\" button, so\n        // set empty values to the empty string.\n        value = \"\";\n      }\n      const newFormData = { ...this.props.formData, [name]: value };\n      this.props.onChange(\n        newFormData,\n        errorSchema &&\n          this.props.errorSchema && {\n            ...this.props.errorSchema,\n            [name]: errorSchema,\n          }\n      );\n    };\n  };\n\n  onDropPropertyClick = key => {\n    return event => {\n      event.preventDefault();\n      const { onChange, formData } = this.props;\n      const copiedFormData = { ...formData };\n      delete copiedFormData[key];\n      onChange(copiedFormData);\n    };\n  };\n\n  getAvailableKey = (preferredKey, formData) => {\n    var index = 0;\n    var newKey = preferredKey;\n    while (formData.hasOwnProperty(newKey)) {\n      newKey = `${preferredKey}-${++index}`;\n    }\n    return newKey;\n  };\n\n  onKeyChange = oldValue => {\n    return (value, errorSchema) => {\n      if (oldValue === value) {\n        return;\n      }\n\n      value = this.getAvailableKey(value, this.props.formData);\n      const newFormData = { ...this.props.formData };\n      const newKeys = { [oldValue]: value };\n      const keyValues = Object.keys(newFormData).map(key => {\n        const newKey = newKeys[key] || key;\n        return { [newKey]: newFormData[key] };\n      });\n      const renamedObj = Object.assign({}, ...keyValues);\n\n      this.setState({ wasPropertyKeyModified: true });\n\n      this.props.onChange(\n        renamedObj,\n        errorSchema &&\n          this.props.errorSchema && {\n            ...this.props.errorSchema,\n            [value]: errorSchema,\n          }\n      );\n    };\n  };\n\n  getDefaultValue(type) {\n    switch (type) {\n      case \"string\":\n        return \"New Value\";\n      case \"array\":\n        return [];\n      case \"boolean\":\n        return false;\n      case \"null\":\n        return null;\n      case \"number\":\n        return 0;\n      case \"object\":\n        return {};\n      default:\n        // We don't have a datatype for some reason (perhaps additionalProperties was true)\n        return \"New Value\";\n    }\n  }\n\n  handleAddClick = schema => () => {\n    let type = schema.additionalProperties.type;\n    const newFormData = { ...this.props.formData };\n\n    if (schema.additionalProperties.hasOwnProperty(\"$ref\")) {\n      const { registry = getDefaultRegistry() } = this.props;\n      const refSchema = retrieveSchema(\n        { $ref: schema.additionalProperties[\"$ref\"] },\n        registry.rootSchema,\n        this.props.formData\n      );\n\n      type = refSchema.type;\n    }\n\n    newFormData[\n      this.getAvailableKey(\"newKey\", newFormData)\n    ] = this.getDefaultValue(type);\n\n    this.props.onChange(newFormData);\n  };\n\n  render() {\n    const {\n      uiSchema,\n      formData,\n      errorSchema,\n      idSchema,\n      name,\n      required,\n      disabled,\n      readonly,\n      idPrefix,\n      onBlur,\n      onFocus,\n      registry = getDefaultRegistry(),\n    } = this.props;\n\n    const { rootSchema, fields, formContext } = registry;\n    const { SchemaField, TitleField, DescriptionField } = fields;\n    const schema = retrieveSchema(this.props.schema, rootSchema, formData);\n\n    const title = schema.title === undefined ? name : schema.title;\n    const description = uiSchema[\"ui:description\"] || schema.description;\n    let orderedProperties;\n    try {\n      const properties = Object.keys(schema.properties || {});\n      orderedProperties = orderProperties(properties, uiSchema[\"ui:order\"]);\n    } catch (err) {\n      return (\n        <div>\n          <p className=\"config-error\" style={{ color: \"red\" }}>\n            Invalid {name || \"root\"} object field configuration:\n            <em>{err.message}</em>.\n          </p>\n          <pre>{JSON.stringify(schema)}</pre>\n        </div>\n      );\n    }\n\n    const Template =\n      uiSchema[\"ui:ObjectFieldTemplate\"] ||\n      registry.ObjectFieldTemplate ||\n      DefaultObjectFieldTemplate;\n\n    const templateProps = {\n      title: uiSchema[\"ui:title\"] || title,\n      description,\n      TitleField,\n      DescriptionField,\n      properties: orderedProperties.map(name => {\n        const addedByAdditionalProperties = schema.properties[\n          name\n        ].hasOwnProperty(ADDITIONAL_PROPERTY_FLAG);\n        const fieldUiSchema = addedByAdditionalProperties\n          ? uiSchema.additionalProperties\n          : uiSchema[name];\n        const hidden = fieldUiSchema && fieldUiSchema[\"ui:widget\"] === \"hidden\";\n\n        return {\n          content: (\n            <SchemaField\n              key={name}\n              name={name}\n              required={this.isRequired(name)}\n              schema={schema.properties[name]}\n              uiSchema={fieldUiSchema}\n              errorSchema={errorSchema[name]}\n              idSchema={idSchema[name]}\n              idPrefix={idPrefix}\n              formData={(formData || {})[name]}\n              wasPropertyKeyModified={this.state.wasPropertyKeyModified}\n              onKeyChange={this.onKeyChange(name)}\n              onChange={this.onPropertyChange(\n                name,\n                addedByAdditionalProperties\n              )}\n              onBlur={onBlur}\n              onFocus={onFocus}\n              registry={registry}\n              disabled={disabled}\n              readonly={readonly}\n              onDropPropertyClick={this.onDropPropertyClick}\n            />\n          ),\n          name,\n          readonly,\n          disabled,\n          required,\n          hidden,\n        };\n      }),\n      readonly,\n      disabled,\n      required,\n      idSchema,\n      uiSchema,\n      schema,\n      formData,\n      formContext,\n      registry,\n    };\n    return <Template {...templateProps} onAddClick={this.handleAddClick} />;\n  }\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ObjectField.propTypes = types.fieldProps;\n}\n\nexport default ObjectField;\n"]},"metadata":{},"sourceType":"module"}