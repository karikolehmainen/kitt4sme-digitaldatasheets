{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from \"react\";\nimport * as types from \"../../types\";\nimport { getWidget, getUiOptions, optionsList, getDefaultRegistry } from \"../../utils\";\n\nfunction BooleanField(props) {\n  var schema = props.schema,\n      name = props.name,\n      uiSchema = props.uiSchema,\n      idSchema = props.idSchema,\n      formData = props.formData,\n      _props$registry = props.registry,\n      registry = _props$registry === void 0 ? getDefaultRegistry() : _props$registry,\n      required = props.required,\n      disabled = props.disabled,\n      readonly = props.readonly,\n      autofocus = props.autofocus,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      rawErrors = props.rawErrors;\n  var title = schema.title;\n  var widgets = registry.widgets,\n      formContext = registry.formContext,\n      fields = registry.fields;\n\n  var _getUiOptions = getUiOptions(uiSchema),\n      _getUiOptions$widget = _getUiOptions.widget,\n      widget = _getUiOptions$widget === void 0 ? \"checkbox\" : _getUiOptions$widget,\n      options = _objectWithoutProperties(_getUiOptions, [\"widget\"]);\n\n  var Widget = getWidget(schema, widget, widgets);\n  var enumOptions;\n\n  if (Array.isArray(schema.oneOf)) {\n    enumOptions = optionsList({\n      oneOf: schema.oneOf.map(function (option) {\n        return _objectSpread({}, option, {\n          title: option.title || (option[\"const\"] === true ? \"Yes\" : \"No\")\n        });\n      })\n    });\n  } else {\n    enumOptions = optionsList({\n      \"enum\": schema[\"enum\"] || [true, false],\n      enumNames: schema.enumNames || (schema[\"enum\"] && schema[\"enum\"][0] === false ? [\"No\", \"Yes\"] : [\"Yes\", \"No\"])\n    });\n  }\n\n  return React.createElement(Widget, {\n    options: _objectSpread({}, options, {\n      enumOptions: enumOptions\n    }),\n    schema: schema,\n    uiSchema: uiSchema,\n    id: idSchema && idSchema.$id,\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    label: title === undefined ? name : title,\n    value: formData,\n    required: required,\n    disabled: disabled,\n    readonly: readonly,\n    registry: registry,\n    formContext: formContext,\n    autofocus: autofocus,\n    rawErrors: rawErrors,\n    DescriptionField: fields.DescriptionField\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  BooleanField.propTypes = types.fieldProps;\n}\n\nBooleanField.defaultProps = {\n  uiSchema: {},\n  disabled: false,\n  readonly: false,\n  autofocus: false\n};\nexport default BooleanField;","map":{"version":3,"mappings":"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","names":["React","types","getWidget","getUiOptions","optionsList","getDefaultRegistry","BooleanField","props","schema","name","uiSchema","idSchema","formData","registry","required","disabled","readonly","autofocus","onChange","onFocus","onBlur","rawErrors","title","widgets","formContext","fields","widget","options","Widget","enumOptions","Array","isArray","oneOf","map","option","enumNames","id","$id","label","undefined","value","DescriptionField","process","env","NODE_ENV","propTypes","fieldProps","defaultProps"],"sources":["/core/src/components/fields/BooleanField.js"],"sourcesContent":["import React from \"react\";\nimport * as types from \"../../types\";\n\nimport {\n  getWidget,\n  getUiOptions,\n  optionsList,\n  getDefaultRegistry,\n} from \"../../utils\";\n\nfunction BooleanField(props) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    registry = getDefaultRegistry(),\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onFocus,\n    onBlur,\n    rawErrors,\n  } = props;\n  const { title } = schema;\n  const { widgets, formContext, fields } = registry;\n  const { widget = \"checkbox\", ...options } = getUiOptions(uiSchema);\n  const Widget = getWidget(schema, widget, widgets);\n\n  let enumOptions;\n\n  if (Array.isArray(schema.oneOf)) {\n    enumOptions = optionsList({\n      oneOf: schema.oneOf.map(option => ({\n        ...option,\n        title: option.title || (option.const === true ? \"Yes\" : \"No\"),\n      })),\n    });\n  } else {\n    enumOptions = optionsList({\n      enum: schema.enum || [true, false],\n      enumNames:\n        schema.enumNames ||\n        (schema.enum && schema.enum[0] === false\n          ? [\"No\", \"Yes\"]\n          : [\"Yes\", \"No\"]),\n    });\n  }\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      uiSchema={uiSchema}\n      id={idSchema && idSchema.$id}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      label={title === undefined ? name : title}\n      value={formData}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      registry={registry}\n      formContext={formContext}\n      autofocus={autofocus}\n      rawErrors={rawErrors}\n      DescriptionField={fields.DescriptionField}\n    />\n  );\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  BooleanField.propTypes = types.fieldProps;\n}\n\nBooleanField.defaultProps = {\n  uiSchema: {},\n  disabled: false,\n  readonly: false,\n  autofocus: false,\n};\n\nexport default BooleanField;\n"]},"metadata":{},"sourceType":"module"}