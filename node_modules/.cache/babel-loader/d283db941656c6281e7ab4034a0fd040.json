{"ast":null,"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction RadioWidget(props) {\n  var options = props.options,\n      value = props.value,\n      required = props.required,\n      disabled = props.disabled,\n      readonly = props.readonly,\n      autofocus = props.autofocus,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      _onChange = props.onChange,\n      id = props.id; // Generating a unique field name to identify this set of radio buttons\n\n  var name = Math.random().toString();\n  var enumOptions = options.enumOptions,\n      enumDisabled = options.enumDisabled,\n      inline = options.inline; // checked={checked} has been moved above name={name}, As mentioned in #349;\n  // this is a temporary fix for radio button rendering bug in React, facebook/react#7630.\n\n  return React.createElement(\"div\", {\n    className: \"field-radio-group\",\n    id: id\n  }, enumOptions.map(function (option, i) {\n    var checked = option.value === value;\n    var itemDisabled = enumDisabled && enumDisabled.indexOf(option.value) != -1;\n    var disabledCls = disabled || itemDisabled || readonly ? \"disabled\" : \"\";\n    var radio = React.createElement(\"span\", null, React.createElement(\"input\", {\n      type: \"radio\",\n      checked: checked,\n      name: name,\n      required: required,\n      value: option.value,\n      disabled: disabled || itemDisabled || readonly,\n      autoFocus: autofocus && i === 0,\n      onChange: function onChange(_) {\n        return _onChange(option.value);\n      },\n      onBlur: onBlur && function (event) {\n        return onBlur(id, event.target.value);\n      },\n      onFocus: onFocus && function (event) {\n        return onFocus(id, event.target.value);\n      }\n    }), React.createElement(\"span\", null, option.label));\n    return inline ? React.createElement(\"label\", {\n      key: i,\n      className: \"radio-inline \".concat(disabledCls)\n    }, radio) : React.createElement(\"div\", {\n      key: i,\n      className: \"radio \".concat(disabledCls)\n    }, React.createElement(\"label\", null, radio));\n  }));\n}\n\nRadioWidget.defaultProps = {\n  autofocus: false\n};\n\nif (process.env.NODE_ENV !== \"production\") {\n  RadioWidget.propTypes = {\n    schema: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    options: PropTypes.shape({\n      enumOptions: PropTypes.array,\n      inline: PropTypes.bool\n    }).isRequired,\n    value: PropTypes.any,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    onChange: PropTypes.func\n  };\n}\n\nexport default RadioWidget;","map":{"version":3,"mappings":"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","names":["React","PropTypes","RadioWidget","props","options","value","required","disabled","readonly","autofocus","onBlur","onFocus","onChange","id","name","Math","random","toString","enumOptions","enumDisabled","inline","className","map","option","i","checked","itemDisabled","indexOf","disabledCls","radio","type","autoFocus","event","target","label","key","defaultProps","process","env","NODE_ENV","propTypes","schema","object","isRequired","string","shape","array","bool","any","func"],"sources":["/core/src/components/widgets/RadioWidget.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction RadioWidget(props) {\n  const {\n    options,\n    value,\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onBlur,\n    onFocus,\n    onChange,\n    id,\n  } = props;\n  // Generating a unique field name to identify this set of radio buttons\n  const name = Math.random().toString();\n  const { enumOptions, enumDisabled, inline } = options;\n  // checked={checked} has been moved above name={name}, As mentioned in #349;\n  // this is a temporary fix for radio button rendering bug in React, facebook/react#7630.\n  return (\n    <div className=\"field-radio-group\" id={id}>\n      {enumOptions.map((option, i) => {\n        const checked = option.value === value;\n        const itemDisabled =\n          enumDisabled && enumDisabled.indexOf(option.value) != -1;\n        const disabledCls =\n          disabled || itemDisabled || readonly ? \"disabled\" : \"\";\n        const radio = (\n          <span>\n            <input\n              type=\"radio\"\n              checked={checked}\n              name={name}\n              required={required}\n              value={option.value}\n              disabled={disabled || itemDisabled || readonly}\n              autoFocus={autofocus && i === 0}\n              onChange={_ => onChange(option.value)}\n              onBlur={onBlur && (event => onBlur(id, event.target.value))}\n              onFocus={onFocus && (event => onFocus(id, event.target.value))}\n            />\n            <span>{option.label}</span>\n          </span>\n        );\n\n        return inline ? (\n          <label key={i} className={`radio-inline ${disabledCls}`}>\n            {radio}\n          </label>\n        ) : (\n          <div key={i} className={`radio ${disabledCls}`}>\n            <label>{radio}</label>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nRadioWidget.defaultProps = {\n  autofocus: false,\n};\n\nif (process.env.NODE_ENV !== \"production\") {\n  RadioWidget.propTypes = {\n    schema: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    options: PropTypes.shape({\n      enumOptions: PropTypes.array,\n      inline: PropTypes.bool,\n    }).isRequired,\n    value: PropTypes.any,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    onChange: PropTypes.func,\n  };\n}\nexport default RadioWidget;\n"]},"metadata":{},"sourceType":"module"}