{"ast":null,"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction TextareaWidget(props) {\n  var id = props.id,\n      options = props.options,\n      placeholder = props.placeholder,\n      value = props.value,\n      required = props.required,\n      disabled = props.disabled,\n      readonly = props.readonly,\n      autofocus = props.autofocus,\n      onChange = props.onChange,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus;\n\n  var _onChange = function _onChange(_ref) {\n    var value = _ref.target.value;\n    return onChange(value === \"\" ? options.emptyValue : value);\n  };\n\n  return React.createElement(\"textarea\", {\n    id: id,\n    className: \"form-control\",\n    value: value ? value : \"\",\n    placeholder: placeholder,\n    required: required,\n    disabled: disabled,\n    readOnly: readonly,\n    autoFocus: autofocus,\n    rows: options.rows,\n    onBlur: onBlur && function (event) {\n      return onBlur(id, event.target.value);\n    },\n    onFocus: onFocus && function (event) {\n      return onFocus(id, event.target.value);\n    },\n    onChange: _onChange\n  });\n}\n\nTextareaWidget.defaultProps = {\n  autofocus: false,\n  options: {}\n};\n\nif (process.env.NODE_ENV !== \"production\") {\n  TextareaWidget.propTypes = {\n    schema: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    options: PropTypes.shape({\n      rows: PropTypes.number\n    }),\n    value: PropTypes.string,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func\n  };\n}\n\nexport default TextareaWidget;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,MAE3BC,EAF2B,GAazBD,KAbyB,CAE3BC,EAF2B;AAAA,MAG3BC,OAH2B,GAazBF,KAbyB,CAG3BE,OAH2B;AAAA,MAI3BC,WAJ2B,GAazBH,KAbyB,CAI3BG,WAJ2B;AAAA,MAK3BC,KAL2B,GAazBJ,KAbyB,CAK3BI,KAL2B;AAAA,MAM3BC,QAN2B,GAazBL,KAbyB,CAM3BK,QAN2B;AAAA,MAO3BC,QAP2B,GAazBN,KAbyB,CAO3BM,QAP2B;AAAA,MAQ3BC,QAR2B,GAazBP,KAbyB,CAQ3BO,QAR2B;AAAA,MAS3BC,SAT2B,GAazBR,KAbyB,CAS3BQ,SAT2B;AAAA,MAU3BC,QAV2B,GAazBT,KAbyB,CAU3BS,QAV2B;AAAA,MAW3BC,MAX2B,GAazBV,KAbyB,CAW3BU,MAX2B;AAAA,MAY3BC,OAZ2B,GAazBX,KAbyB,CAY3BW,OAZ2B;;AAc7B,MAAMC,SAAS,GAAG,SAAZA,SAAY,OAA2B;AAAA,QAAdR,KAAc,QAAxBS,MAAwB,CAAdT,KAAc;AAC3C,WAAOK,QAAQ,CAACL,KAAK,KAAK,EAAVA,GAAeF,OAAO,CAACY,UAAvBV,GAAoCA,KAArC,CAAf;AADF;;AAGA,SACEP;AACEI,MAAE,EAAEA,EADN;AAEEc,aAAS,EAAC,cAFZ;AAGEX,SAAK,EAAEA,KAAK,GAAGA,KAAH,GAAW,EAHzB;AAIED,eAAW,EAAEA,WAJf;AAKEE,YAAQ,EAAEA,QALZ;AAMEC,YAAQ,EAAEA,QANZ;AAOEU,YAAQ,EAAET,QAPZ;AAQEU,aAAS,EAAET,SARb;AASEU,QAAI,EAAEhB,OAAO,CAACgB,IAThB;AAUER,UAAM,EAAEA,MAAM,IAAK,iBAAK;AAAA,aAAIA,MAAM,CAACT,EAAD,EAAKkB,KAAK,CAACN,MAANM,CAAaf,KAAlB,CAAV;AAV1B;AAWEO,WAAO,EAAEA,OAAO,IAAK,iBAAK;AAAA,aAAIA,OAAO,CAACV,EAAD,EAAKkB,KAAK,CAACN,MAANM,CAAaf,KAAlB,CAAX;AAX5B;AAYEK,YAAQ,EAAEG;AAZZ,IADF;AAgBD;;AAEDb,cAAc,CAACqB,YAAfrB,GAA8B;AAC5BS,WAAS,EAAE,KADiB;AAE5BN,SAAO,EAAE;AAFmB,CAA9BH;;AAKA,IAAIsB,OAAO,CAACC,GAARD,CAAYE,QAAZF,KAAyB,YAA7B,EAA2C;AACzCtB,gBAAc,CAACyB,SAAfzB,GAA2B;AACzB0B,UAAM,EAAE3B,SAAS,CAAC4B,MAAV5B,CAAiB6B,UADA;AAEzB1B,MAAE,EAAEH,SAAS,CAAC8B,MAAV9B,CAAiB6B,UAFI;AAGzBxB,eAAW,EAAEL,SAAS,CAAC8B,MAHE;AAIzB1B,WAAO,EAAEJ,SAAS,CAAC+B,KAAV/B,CAAgB;AACvBoB,UAAI,EAAEpB,SAAS,CAACgC;AADO,KAAhBhC,CAJgB;AAOzBM,SAAK,EAAEN,SAAS,CAAC8B,MAPQ;AAQzBvB,YAAQ,EAAEP,SAAS,CAACiC,IARK;AASzBzB,YAAQ,EAAER,SAAS,CAACiC,IATK;AAUzBxB,YAAQ,EAAET,SAAS,CAACiC,IAVK;AAWzBvB,aAAS,EAAEV,SAAS,CAACiC,IAXI;AAYzBtB,YAAQ,EAAEX,SAAS,CAACkC,IAZK;AAazBtB,UAAM,EAAEZ,SAAS,CAACkC,IAbO;AAczBrB,WAAO,EAAEb,SAAS,CAACkC;AAdM,GAA3BjC;AAgBD;;AAED,eAAeA,cAAf","names":["React","PropTypes","TextareaWidget","props","id","options","placeholder","value","required","disabled","readonly","autofocus","onChange","onBlur","onFocus","_onChange","target","emptyValue","className","readOnly","autoFocus","rows","event","defaultProps","process","env","NODE_ENV","propTypes","schema","object","isRequired","string","shape","number","bool","func"],"sources":["/core/src/components/widgets/TextareaWidget.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction TextareaWidget(props) {\n  const {\n    id,\n    options,\n    placeholder,\n    value,\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n  } = props;\n  const _onChange = ({ target: { value } }) => {\n    return onChange(value === \"\" ? options.emptyValue : value);\n  };\n  return (\n    <textarea\n      id={id}\n      className=\"form-control\"\n      value={value ? value : \"\"}\n      placeholder={placeholder}\n      required={required}\n      disabled={disabled}\n      readOnly={readonly}\n      autoFocus={autofocus}\n      rows={options.rows}\n      onBlur={onBlur && (event => onBlur(id, event.target.value))}\n      onFocus={onFocus && (event => onFocus(id, event.target.value))}\n      onChange={_onChange}\n    />\n  );\n}\n\nTextareaWidget.defaultProps = {\n  autofocus: false,\n  options: {},\n};\n\nif (process.env.NODE_ENV !== \"production\") {\n  TextareaWidget.propTypes = {\n    schema: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    placeholder: PropTypes.string,\n    options: PropTypes.shape({\n      rows: PropTypes.number,\n    }),\n    value: PropTypes.string,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func,\n  };\n}\n\nexport default TextareaWidget;\n"]},"metadata":{},"sourceType":"module"}