{"ast":null,"code":"var isEqual = require('lodash/isEqual');\n\nvar sortBy = require('lodash/sortBy');\n\nvar uniq = require('lodash/uniq');\n\nvar uniqWith = require('lodash/uniqWith');\n\nvar defaults = require('lodash/defaults');\n\nvar intersectionWith = require('lodash/intersectionWith');\n\nvar isPlainObject = require('lodash/isPlainObject');\n\nvar isBoolean = require('lodash/isBoolean');\n\nvar normalizeArray = val => Array.isArray(val) ? val : [val];\n\nvar undef = val => val === undefined;\n\nvar keys = obj => isPlainObject(obj) || Array.isArray(obj) ? Object.keys(obj) : [];\n\nvar has = (obj, key) => obj.hasOwnProperty(key);\n\nvar stringArray = arr => sortBy(uniq(arr));\n\nvar undefEmpty = val => undef(val) || Array.isArray(val) && val.length === 0;\n\nvar keyValEqual = (a, b, key, compare) => b && has(b, key) && a && has(a, key) && compare(a[key], b[key]);\n\nvar undefAndZero = (a, b) => undef(a) && b === 0 || undef(b) && a === 0 || isEqual(a, b);\n\nvar falseUndefined = (a, b) => undef(a) && b === false || undef(b) && a === false || isEqual(a, b);\n\nvar emptySchema = schema => undef(schema) || isEqual(schema, {}) || schema === true;\n\nvar emptyObjUndef = schema => undef(schema) || isEqual(schema, {});\n\nvar isSchema = val => undef(val) || isPlainObject(val) || val === true || val === false;\n\nfunction undefArrayEqual(a, b) {\n  if (undefEmpty(a) && undefEmpty(b)) {\n    return true;\n  } else {\n    return isEqual(stringArray(a), stringArray(b));\n  }\n}\n\nfunction unsortedNormalizedArray(a, b) {\n  a = normalizeArray(a);\n  b = normalizeArray(b);\n  return isEqual(stringArray(a), stringArray(b));\n}\n\nfunction schemaGroup(a, b, key, compare) {\n  var allProps = uniq(keys(a).concat(keys(b)));\n\n  if (emptyObjUndef(a) && emptyObjUndef(b)) {\n    return true;\n  } else if (emptyObjUndef(a) && keys(b).length) {\n    return false;\n  } else if (emptyObjUndef(b) && keys(a).length) {\n    return false;\n  }\n\n  return allProps.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n\n    if (Array.isArray(aVal) && Array.isArray(bVal)) {\n      return isEqual(stringArray(a), stringArray(b));\n    } else if (Array.isArray(aVal) && !Array.isArray(bVal)) {\n      return false;\n    } else if (Array.isArray(bVal) && !Array.isArray(aVal)) {\n      return false;\n    }\n\n    return keyValEqual(a, b, key, compare);\n  });\n}\n\nfunction items(a, b, key, compare) {\n  if (isPlainObject(a) && isPlainObject(b)) {\n    return compare(a, b);\n  } else if (Array.isArray(a) && Array.isArray(b)) {\n    return schemaGroup(a, b, key, compare);\n  } else {\n    return isEqual(a, b);\n  }\n}\n\nfunction unsortedArray(a, b, key, compare) {\n  var uniqueA = uniqWith(a, compare);\n  var uniqueB = uniqWith(b, compare);\n  var inter = intersectionWith(uniqueA, uniqueB, compare);\n  return inter.length === Math.max(uniqueA.length, uniqueB.length);\n}\n\nvar comparers = {\n  title: isEqual,\n  uniqueItems: falseUndefined,\n  minLength: undefAndZero,\n  minItems: undefAndZero,\n  minProperties: undefAndZero,\n  required: undefArrayEqual,\n  enum: undefArrayEqual,\n  type: unsortedNormalizedArray,\n  items: items,\n  anyOf: unsortedArray,\n  allOf: unsortedArray,\n  oneOf: unsortedArray,\n  properties: schemaGroup,\n  patternProperties: schemaGroup,\n  dependencies: schemaGroup\n};\nvar acceptsUndefined = ['properties', 'patternProperties', 'dependencies', 'uniqueItems', 'minLength', 'minItems', 'minProperties', 'required'];\nvar schemaProps = ['additionalProperties', 'additionalItems', 'contains', 'propertyNames', 'not'];\n\nfunction compare(a, b, options) {\n  options = defaults(options, {\n    ignore: []\n  });\n\n  if (emptySchema(a) && emptySchema(b)) {\n    return true;\n  }\n\n  if (!isSchema(a) || !isSchema(b)) {\n    throw new Error('Either of the values are not a JSON schema.');\n  }\n\n  if (a === b) {\n    return true;\n  }\n\n  if (isBoolean(a) && isBoolean(b)) {\n    return a === b;\n  }\n\n  if (a === undefined && b === false || b === undefined && a === false) {\n    return false;\n  }\n\n  if (undef(a) && !undef(b) || !undef(a) && undef(b)) {\n    return false;\n  }\n\n  var allKeys = uniq(Object.keys(a).concat(Object.keys(b)));\n\n  if (options.ignore.length) {\n    allKeys = allKeys.filter(k => options.ignore.indexOf(k) === -1);\n  }\n\n  if (!allKeys.length) {\n    return true;\n  }\n\n  function innerCompare(a, b) {\n    return compare(a, b, options);\n  }\n\n  return allKeys.every(function (key) {\n    var aValue = a[key];\n    var bValue = b[key];\n\n    if (schemaProps.indexOf(key) !== -1) {\n      return compare(aValue, bValue, options);\n    }\n\n    var comparer = comparers[key];\n\n    if (!comparer) {\n      comparer = isEqual;\n    } // do simple lodash check first\n\n\n    if (isEqual(aValue, bValue)) {\n      return true;\n    }\n\n    if (acceptsUndefined.indexOf(key) === -1) {\n      if (!has(a, key) && has(b, key) || has(a, key) && !has(b, key)) {\n        return aValue === bValue;\n      }\n    }\n\n    var result = comparer(aValue, bValue, key, innerCompare);\n\n    if (!isBoolean(result)) {\n      throw new Error('Comparer must return true or false');\n    }\n\n    return result;\n  });\n}\n\nmodule.exports = compare;","map":{"version":3,"sources":["/home/testvmuser/kitt4sme-digitaldatasheets3/kitt4sme-digitaldatasheets/node_modules/json-schema-compare/src/index.js"],"names":["isEqual","require","sortBy","uniq","uniqWith","defaults","intersectionWith","isPlainObject","isBoolean","normalizeArray","val","Array","isArray","undef","undefined","keys","obj","Object","has","key","hasOwnProperty","stringArray","arr","undefEmpty","length","keyValEqual","a","b","compare","undefAndZero","falseUndefined","emptySchema","schema","emptyObjUndef","isSchema","undefArrayEqual","unsortedNormalizedArray","schemaGroup","allProps","concat","every","aVal","bVal","items","unsortedArray","uniqueA","uniqueB","inter","Math","max","comparers","title","uniqueItems","minLength","minItems","minProperties","required","enum","type","anyOf","allOf","oneOf","properties","patternProperties","dependencies","acceptsUndefined","schemaProps","options","ignore","Error","allKeys","filter","k","indexOf","innerCompare","aValue","bValue","comparer","result","module","exports"],"mappings":"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","sourcesContent":["var isEqual = require('lodash/isEqual')\nvar sortBy = require('lodash/sortBy')\nvar uniq = require('lodash/uniq')\nvar uniqWith = require('lodash/uniqWith')\nvar defaults = require('lodash/defaults')\nvar intersectionWith = require('lodash/intersectionWith')\nvar isPlainObject = require('lodash/isPlainObject')\nvar isBoolean = require('lodash/isBoolean')\n\nvar normalizeArray = val => Array.isArray(val)\n  ? val : [val]\nvar undef = val => val === undefined\nvar keys = obj => isPlainObject(obj) || Array.isArray(obj) ? Object.keys(obj) : []\nvar has = (obj, key) => obj.hasOwnProperty(key)\nvar stringArray = arr => sortBy(uniq(arr))\nvar undefEmpty = val => undef(val) || (Array.isArray(val) && val.length === 0)\nvar keyValEqual = (a, b, key, compare) => b && has(b, key) && a && has(a, key) && compare(a[key], b[key])\nvar undefAndZero = (a, b) => (undef(a) && b === 0) || (undef(b) && a === 0) || isEqual(a, b)\nvar falseUndefined = (a, b) => (undef(a) && b === false) || (undef(b) && a === false) || isEqual(a, b)\nvar emptySchema = schema => undef(schema) || isEqual(schema, {}) || schema === true\nvar emptyObjUndef = schema => undef(schema) || isEqual(schema, {})\nvar isSchema = val => undef(val) || isPlainObject(val) || val === true || val === false\n\nfunction undefArrayEqual(a, b) {\n  if (undefEmpty(a) && undefEmpty(b)) {\n    return true\n  } else {\n    return isEqual(stringArray(a), stringArray(b))\n  }\n}\n\nfunction unsortedNormalizedArray(a, b) {\n  a = normalizeArray(a)\n  b = normalizeArray(b)\n  return isEqual(stringArray(a), stringArray(b))\n}\n\nfunction schemaGroup(a, b, key, compare) {\n  var allProps = uniq(keys(a).concat(keys(b)))\n  if (emptyObjUndef(a) && emptyObjUndef(b)) {\n    return true\n  } else if (emptyObjUndef(a) && keys(b).length) {\n    return false\n  } else if (emptyObjUndef(b) && keys(a).length) {\n    return false\n  }\n\n  return allProps.every(function(key) {\n    var aVal = a[key]\n    var bVal = b[key]\n    if (Array.isArray(aVal) && Array.isArray(bVal)) {\n      return isEqual(stringArray(a), stringArray(b))\n    } else if (Array.isArray(aVal) && !Array.isArray(bVal)) {\n      return false\n    } else if (Array.isArray(bVal) && !Array.isArray(aVal)) {\n      return false\n    }\n    return keyValEqual(a, b, key, compare)\n  })\n}\n\nfunction items(a, b, key, compare) {\n  if (isPlainObject(a) && isPlainObject(b)) {\n    return compare(a, b)\n  } else if (Array.isArray(a) && Array.isArray(b)) {\n    return schemaGroup(a, b, key, compare)\n  } else {\n    return isEqual(a, b)\n  }\n}\n\nfunction unsortedArray(a, b, key, compare) {\n  var uniqueA = uniqWith(a, compare)\n  var uniqueB = uniqWith(b, compare)\n  var inter = intersectionWith(uniqueA, uniqueB, compare)\n  return inter.length === Math.max(uniqueA.length, uniqueB.length)\n}\n\nvar comparers = {\n  title: isEqual,\n  uniqueItems: falseUndefined,\n  minLength: undefAndZero,\n  minItems: undefAndZero,\n  minProperties: undefAndZero,\n  required: undefArrayEqual,\n  enum: undefArrayEqual,\n  type: unsortedNormalizedArray,\n  items: items,\n  anyOf: unsortedArray,\n  allOf: unsortedArray,\n  oneOf: unsortedArray,\n  properties: schemaGroup,\n  patternProperties: schemaGroup,\n  dependencies: schemaGroup\n}\n\nvar acceptsUndefined = [\n  'properties',\n  'patternProperties',\n  'dependencies',\n  'uniqueItems',\n  'minLength',\n  'minItems',\n  'minProperties',\n  'required'\n]\n\nvar schemaProps = ['additionalProperties', 'additionalItems', 'contains', 'propertyNames', 'not']\n\nfunction compare(a, b, options) {\n  options = defaults(options, {\n    ignore: []\n  })\n\n  if (emptySchema(a) && emptySchema(b)) {\n    return true\n  }\n\n  if (!isSchema(a) || !isSchema(b)) {\n    throw new Error('Either of the values are not a JSON schema.')\n  }\n  if (a === b) {\n    return true\n  }\n\n  if (isBoolean(a) && isBoolean(b)) {\n    return a === b\n  }\n\n  if ((a === undefined && b === false) || (b === undefined && a === false)) {\n    return false\n  }\n\n  if ((undef(a) && !undef(b)) || (!undef(a) && undef(b))) {\n    return false\n  }\n\n  var allKeys = uniq(Object.keys(a).concat(Object.keys(b)))\n\n  if (options.ignore.length) {\n    allKeys = allKeys.filter(k => options.ignore.indexOf(k) === -1)\n  }\n\n  if (!allKeys.length) {\n    return true\n  }\n\n  function innerCompare(a, b) {\n    return compare(a, b, options)\n  }\n\n  return allKeys.every(function(key) {\n    var aValue = a[key]\n    var bValue = b[key]\n\n    if (schemaProps.indexOf(key) !== -1) {\n      return compare(aValue, bValue, options)\n    }\n\n    var comparer = comparers[key]\n    if (!comparer) {\n      comparer = isEqual\n    }\n\n    // do simple lodash check first\n    if (isEqual(aValue, bValue)) {\n      return true\n    }\n\n    if (acceptsUndefined.indexOf(key) === -1) {\n      if ((!has(a, key) && has(b, key)) || (has(a, key) && !has(b, key))) {\n        return aValue === bValue\n      }\n    }\n\n    var result = comparer(aValue, bValue, key, innerCompare)\n    if (!isBoolean(result)) {\n      throw new Error('Comparer must return true or false')\n    }\n    return result\n  })\n}\n\nmodule.exports = compare\n"]},"metadata":{},"sourceType":"script"}