{"ast":null,"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction UnsupportedField(_ref) {\n  var schema = _ref.schema,\n      idSchema = _ref.idSchema,\n      reason = _ref.reason;\n  return React.createElement(\"div\", {\n    className: \"unsupported-field\"\n  }, React.createElement(\"p\", null, \"Unsupported field schema\", idSchema && idSchema.$id && React.createElement(\"span\", null, \" for\", \" field \", React.createElement(\"code\", null, idSchema.$id)), reason && React.createElement(\"em\", null, \": \", reason), \".\"), schema && React.createElement(\"pre\", null, JSON.stringify(schema, null, 2)));\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  UnsupportedField.propTypes = {\n    schema: PropTypes.object.isRequired,\n    idSchema: PropTypes.object,\n    reason: PropTypes.string\n  };\n}\n\nexport default UnsupportedField;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,gBAAT,OAAwD;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACtD,SACEL;AAAKM,aAAS,EAAC;AAAf,KACEN,2DAEGI,QAAQ,IAAIA,QAAQ,CAACG,GAArBH,IACCJ,kCACG,MADH,aACiBA,kCAAOI,QAAQ,CAACG,GAAhB,CADjB,CAHJ,EAOGF,MAAM,IAAIL,sCAAOK,MAAP,CAPb,MADF,EAUGF,MAAM,IAAIH,iCAAMQ,IAAI,CAACC,SAALD,CAAeL,MAAfK,EAAuB,IAAvBA,EAA6B,CAA7BA,CAAN,CAVb,CADF;AAcD;;AAED,IAAIE,OAAO,CAACC,GAARD,CAAYE,QAAZF,KAAyB,YAA7B,EAA2C;AACzCR,kBAAgB,CAACW,SAAjBX,GAA6B;AAC3BC,UAAM,EAAEF,SAAS,CAACa,MAAVb,CAAiBc,UADE;AAE3BX,YAAQ,EAAEH,SAAS,CAACa,MAFO;AAG3BT,UAAM,EAAEJ,SAAS,CAACe;AAHS,GAA7Bd;AAKD;;AAED,eAAeA,gBAAf","names":["React","PropTypes","UnsupportedField","schema","idSchema","reason","className","$id","JSON","stringify","process","env","NODE_ENV","propTypes","object","isRequired","string"],"sources":["/core/src/components/fields/UnsupportedField.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction UnsupportedField({ schema, idSchema, reason }) {\n  return (\n    <div className=\"unsupported-field\">\n      <p>\n        Unsupported field schema\n        {idSchema && idSchema.$id && (\n          <span>\n            {\" for\"} field <code>{idSchema.$id}</code>\n          </span>\n        )}\n        {reason && <em>: {reason}</em>}.\n      </p>\n      {schema && <pre>{JSON.stringify(schema, null, 2)}</pre>}\n    </div>\n  );\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  UnsupportedField.propTypes = {\n    schema: PropTypes.object.isRequired,\n    idSchema: PropTypes.object,\n    reason: PropTypes.string,\n  };\n}\n\nexport default UnsupportedField;\n"]},"metadata":{},"sourceType":"module"}